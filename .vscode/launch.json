{
    // Use IntelliSense to learn about possible Node.js debug attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "hello-server",
            "program": "${workspaceRoot}/examples/hello-server.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "hello-redis",
            "program": "${workspaceRoot}/examples/hello-redis.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "hello-server",
            "program": "${workspaceRoot}/examples/json-placeholder.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "resolver-function",
            "program": "${workspaceRoot}/examples/resolver-function.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic caller Http server",
            "program": "${workspaceRoot}/tests/servers/caller.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8080",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "express",
                "MethodType": "Http"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic caller MQ server",
            "program": "${workspaceRoot}/tests/servers/caller.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8080",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "amqp",
                "MethodType": "MQ"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server FirstClass Http server - destination",
            "program": "${workspaceRoot}/tests/servers/perclass/FirstClass.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8091",
                "DEBUG": "*",
                "NODE_ENV": "debug",
                "DEBUG_FILE":"${workspaceRoot}\\log.txt",
                "servers": "express",
                "MethodType": "Local"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic event caller Http server",
            "program": "${workspaceRoot}/tests/servers/eventcaller.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8080",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "express",
                "MethodType": "Http"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic caller SocketIO server",
            "program": "${workspaceRoot}/tests/servers/caller.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8080",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "socketio",
                "MethodType": "Socket"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic caller Redis server",
            "program": "${workspaceRoot}/tests/servers/caller.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8080",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "redis",
                "MethodType": "Redis"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server Redis",
            "program": "${workspaceRoot}/tests/servers/dynamic.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8090",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "redis",
                "MethodType": "Local"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server Rest",
            "program": "${workspaceRoot}/tests/servers/dynamic.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8090",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "express",
                "MethodType": "Local"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server Socketio",
            "program": "${workspaceRoot}/tests/servers/dynamic.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8090",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "socketio",
                "MethodType": "Local"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server MQ",
            "program": "${workspaceRoot}/tests/servers/dynamic.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8090",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "amqp",
                "MethodType": "Local"
            }
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Run dynamic server MQ + Rest",
            "program": "${workspaceRoot}/tests/servers/dynamic.js",
            "cwd": "${workspaceRoot}/",
            "console": "internalConsole",
            "outFiles": [],
            "sourceMaps": true,
            "env": {
                "PORT": "8090",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "servers": "express,amqp",
                "MethodType": "Local"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            // Name of configuration; appears in the launch configuration drop down menu.
            "name": "Run gateway test",
            // Type of configuration. Possible values: "node", "mono".
            "type": "node",
            // Workspace relative or absolute path to the program.
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/gateway.spec.js"
            ],
            "sourceMaps": true,
            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
            "cwd": "${workspaceRoot}",
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            // Environment variables passed to the program.
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            // Name of configuration; appears in the launch configuration drop down menu.
            "name": "Run response test",
            // Type of configuration. Possible values: "node", "mono".
            "type": "node",
            // Workspace relative or absolute path to the program.
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/response.spec.js"
            ],
            "sourceMaps": true,
            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
            "cwd": "${workspaceRoot}",
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            // Environment variables passed to the program.
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            // Name of configuration; appears in the launch configuration drop down menu.
            "name": "Run resolver test",
            // Type of configuration. Possible values: "node", "mono".
            "type": "node",
            // Workspace relative or absolute path to the program.
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/resolvers.spec.js"
            ],
            "sourceMaps": true,
            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
            "cwd": "${workspaceRoot}",
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            // Environment variables passed to the program.
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            // Name of configuration; appears in the launch configuration drop down menu.
            "name": "Run servers test",
            // Type of configuration. Possible values: "node", "mono".
            "type": "node",
            // Workspace relative or absolute path to the program.
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            // Automatically stop program after launch.
            "stopOnEntry": false,
            // Command line arguments passed to the program.
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/_servers.spec.js"
            ],
            "sourceMaps": true,
            // Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
            "cwd": "${workspaceRoot}",
            // Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
            "runtimeExecutable": null,
            // Environment variables passed to the program.
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            "name": "Run fp test",
            "type": "node",
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/fp.spec.js"
            ],
            "sourceMaps": true,
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": null,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug"
            }
        },
        {
            "request": "launch",
            "console": "internalConsole",
            "name": "Run events test",
            "type": "node",
            "program": "${workspaceRoot}/node_modules/mocha/bin/_mocha",
            "stopOnEntry": false,
            "args": [
                "--debug",
                "--inspect",
                "--no-timeouts",
                "tests/events.spec.js"
            ],
            "sourceMaps": true,
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": null,
            "env": {
                "PORT": "8020",
                "DEBUG": "methodulus",
                "NODE_ENV": "debug",
                "DEBUG_FILE": "${workspaceRoot}/logs/"
            }
        },
        {
            "type": "node",
            "request": "attach",
            "name": "Attach to Process",
            "port": 5858,
            "outFiles": [],
            "sourceMaps": true
        }
    ]
}